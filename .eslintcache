[{"C:\\Apps working on\\gmailclone\\src\\index.js":"1","C:\\Apps working on\\gmailclone\\src\\App.js":"2","C:\\Apps working on\\gmailclone\\src\\reportWebVitals.js":"3","C:\\Apps working on\\gmailclone\\src\\components\\header\\Header.js":"4","C:\\Apps working on\\gmailclone\\src\\components\\header\\Test.js":"5","C:\\Apps working on\\gmailclone\\src\\components\\sidebar\\Sidebar.js":"6","C:\\Apps working on\\gmailclone\\src\\components\\sidebar\\SidebarOptions.js":"7","C:\\Apps working on\\gmailclone\\src\\components\\mail\\Mail.js":"8","C:\\Apps working on\\gmailclone\\src\\components\\mailList\\EmailList.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":765,"mtime":1610850081709,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1376,"mtime":1610498794414,"results":"14","hashOfConfig":"11"},{"size":2111,"mtime":1610607267593,"results":"15","hashOfConfig":"11"},{"size":1998,"mtime":1610849251934,"results":"16","hashOfConfig":"11"},{"size":331,"mtime":1610848470834,"results":"17","hashOfConfig":"11"},{"size":142,"mtime":1610850035659,"results":"18","hashOfConfig":"11"},{"size":314,"mtime":1610850165239,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"u5aj9c",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Apps working on\\gmailclone\\src\\index.js",[],["40","41"],"C:\\Apps working on\\gmailclone\\src\\App.js",["42","43"],"C:\\Apps working on\\gmailclone\\src\\reportWebVitals.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\header\\Header.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\header\\Test.js",["44","45"],"import React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport const Test = () => {\r\n\r\n    const [data, setData] = useState()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const USERS_URL = 'https://reqres.in/api/users';\r\n    const [currPage, setCurrPage] = useState(2)\r\n    const [postPerPage, setPostPerPage] = useState(3)\r\n\r\n    const fetchApi = async () => {\r\n        const res = await fetch(USERS_URL)\r\n        const dataRes = await res.json()\r\n        setData(dataRes.data)\r\n        setIsLoading(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApi()\r\n    }, [])\r\n\r\n    const indexOfLastUser = currPage * postPerPage\r\n    const indexOfFirstUser = indexOfLastUser - postPerPage\r\n    let currUsers = []\r\n    if (isLoading) {\r\n        currUsers = data.slice(indexOfFirstUser, indexOfLastUser)\r\n    }\r\n    console.log(currUsers)\r\n\r\n    return (\r\n        <>\r\n            { isLoading && <div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>First Name   </th>\r\n                            <th>Last Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {currUsers.map(user => (\r\n                            <tr>\r\n                                <th>{user.id}</th>\r\n                                <th>{user.first_name}   </th>\r\n                                <th>{user.last_name}</th>\r\n                            </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n\r\n\r\n\r\n                    <br />\r\n                    <br />\r\n                </table>\r\n                <section className=\"pagination\">\r\n                    <button className=\"first-page-btn\">first</button>\r\n                    <button className=\"previous-page-btn\">previous</button>\r\n                    <button className=\"next-page-btn\">next</button>\r\n                    <button className=\"last-page-btn\">last</button>\r\n                </section>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n","C:\\Apps working on\\gmailclone\\src\\components\\sidebar\\Sidebar.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\sidebar\\SidebarOptions.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\mail\\Mail.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\mailList\\EmailList.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":14},{"ruleId":"50","severity":1,"message":"55","line":9,"column":22,"nodeType":"52","messageId":"53","endLine":9,"endColumn":33},{"ruleId":"50","severity":1,"message":"56","line":10,"column":25,"nodeType":"52","messageId":"53","endLine":10,"endColumn":39},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Test' is defined but never used.","'setCurrPage' is assigned a value but never used.","'setPostPerPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]