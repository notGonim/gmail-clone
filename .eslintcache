[{"C:\\Apps working on\\gmailclone\\src\\index.js":"1","C:\\Apps working on\\gmailclone\\src\\App.js":"2","C:\\Apps working on\\gmailclone\\src\\reportWebVitals.js":"3","C:\\Apps working on\\gmailclone\\src\\components\\header\\Header.js":"4","C:\\Apps working on\\gmailclone\\src\\components\\header\\Test.js":"5","C:\\Apps working on\\gmailclone\\src\\components\\sidebar\\Sidebar.js":"6","C:\\Apps working on\\gmailclone\\src\\components\\sidebar\\SidebarOptions.js":"7","C:\\Apps working on\\gmailclone\\src\\components\\mail\\Mail.js":"8","C:\\Apps working on\\gmailclone\\src\\components\\mailList\\EmailList.js":"9","C:\\Apps working on\\gmailclone\\src\\components\\mailList\\Section.js":"10","C:\\Apps working on\\gmailclone\\src\\components\\mailList\\MailRow.js":"11","C:\\Apps working on\\gmailclone\\src\\reducers\\index.js":"12","C:\\Apps working on\\gmailclone\\src\\reducers\\mailReducer.js":"13","C:\\Apps working on\\gmailclone\\src\\components\\sendmail\\SendMail.js":"14","C:\\Apps working on\\gmailclone\\src\\actions\\mailActions.js":"15","C:\\Apps working on\\gmailclone\\src\\firebase.js":"16"},{"size":902,"mtime":1611585853987,"results":"17","hashOfConfig":"18"},{"size":939,"mtime":1611604612394,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1376,"mtime":1610498794414,"results":"21","hashOfConfig":"18"},{"size":2111,"mtime":1610607267593,"results":"22","hashOfConfig":"18"},{"size":2232,"mtime":1611591935618,"results":"23","hashOfConfig":"18"},{"size":331,"mtime":1610848470834,"results":"24","hashOfConfig":"18"},{"size":3140,"mtime":1611151293847,"results":"25","hashOfConfig":"18"},{"size":3136,"mtime":1611604443819,"results":"26","hashOfConfig":"18"},{"size":418,"mtime":1611142317870,"results":"27","hashOfConfig":"18"},{"size":1337,"mtime":1611148702426,"results":"28","hashOfConfig":"18"},{"size":184,"mtime":1611587158105,"results":"29","hashOfConfig":"18"},{"size":570,"mtime":1611604780680,"results":"30","hashOfConfig":"18"},{"size":2147,"mtime":1611603193502,"results":"31","hashOfConfig":"18"},{"size":343,"mtime":1611591989626,"results":"32","hashOfConfig":"18"},{"size":564,"mtime":1611593839580,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"u5aj9c",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Apps working on\\gmailclone\\src\\index.js",[],["72","73"],"C:\\Apps working on\\gmailclone\\src\\App.js",[],"C:\\Apps working on\\gmailclone\\src\\reportWebVitals.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\header\\Header.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\header\\Test.js",["74","75"],"import React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport const Test = () => {\r\n\r\n    const [data, setData] = useState()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const USERS_URL = 'https://reqres.in/api/users';\r\n    const [currPage, setCurrPage] = useState(2)\r\n    const [postPerPage, setPostPerPage] = useState(3)\r\n\r\n    const fetchApi = async () => {\r\n        const res = await fetch(USERS_URL)\r\n        const dataRes = await res.json()\r\n        setData(dataRes.data)\r\n        setIsLoading(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchApi()\r\n    }, [])\r\n\r\n    const indexOfLastUser = currPage * postPerPage\r\n    const indexOfFirstUser = indexOfLastUser - postPerPage\r\n    let currUsers = []\r\n    if (isLoading) {\r\n        currUsers = data.slice(indexOfFirstUser, indexOfLastUser)\r\n    }\r\n    console.log(currUsers)\r\n\r\n    return (\r\n        <>\r\n            { isLoading && <div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>First Name   </th>\r\n                            <th>Last Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {currUsers.map(user => (\r\n                            <tr>\r\n                                <th>{user.id}</th>\r\n                                <th>{user.first_name}   </th>\r\n                                <th>{user.last_name}</th>\r\n                            </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n\r\n\r\n\r\n                    <br />\r\n                    <br />\r\n                </table>\r\n                <section className=\"pagination\">\r\n                    <button className=\"first-page-btn\">first</button>\r\n                    <button className=\"previous-page-btn\">previous</button>\r\n                    <button className=\"next-page-btn\">next</button>\r\n                    <button className=\"last-page-btn\">last</button>\r\n                </section>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n",["76","77"],"C:\\Apps working on\\gmailclone\\src\\components\\sidebar\\Sidebar.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\sidebar\\SidebarOptions.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\mail\\Mail.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\mailList\\EmailList.js",["78"],"import { IconButton } from '@material-ui/core'\r\nimport { CheckBox, CheckBoxOutlineBlank } from '@material-ui/icons'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport React, { useEffect, useState } from 'react'\r\nimport './EmailList.scss'\r\nimport { Section } from './Section';\r\nimport { MailRow } from './MailRow';\r\nimport { db } from '../../firebase';\r\n\r\n\r\n\r\nexport const EmailList = () => {\r\n\r\n    const [emails, setEmails] = useState([])\r\n\r\n    useEffect(() => {\r\n        db.collection('emails').orderBy('timestamp', 'desc')\r\n            .onSnapshot(snapShot => setEmails(snapShot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            }))))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"emailList\">\r\n            <div className=\"emailList_setting\">\r\n                <div className=\"emailList_setting__left\">\r\n                    <IconButton>\r\n                        <CheckBoxOutlineBlank />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"emailList_setting_right\">\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"emailList_section\">\r\n                <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />\r\n                <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\r\n                <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\r\n            </div>\r\n            <div className=\"emailList_list\">\r\n\r\n                {emails.map(({ id, data: { to, subject, message, timestamp } }) => (\r\n                    <MailRow id={id} key={id} title={to} subject={subject}\r\n                        description={message} time={new Date(timestamp?.seconds * 1000).toUTCString} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Apps working on\\gmailclone\\src\\components\\mailList\\Section.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\mailList\\MailRow.js",["79"],"import React from 'react'\r\nimport './MailRow.scss'\r\nimport { IconButton, Popover } from '@material-ui/core'\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\r\nimport { CheckBoxOutlineBlank } from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const MailRow = ({ title, subject, description, time }) => {\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    return (\r\n        <div onClick={() => history.push('/mail')} className=\"emailRow\">\r\n            <div className=\"emailRow_options\">\r\n                <IconButton>\r\n                    <CheckBoxOutlineBlank />\r\n                </IconButton>\r\n                <IconButton>\r\n                    < StarBorderIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <LabelImportantOutlinedIcon />\r\n                </IconButton>\r\n            </div>\r\n            <div className=\"emailRow_title\">\r\n                {title}\r\n            </div>\r\n            <div className=\"emailRow_message\">\r\n                <h4>{subject}\r\n                    <span className=\"emailRow_desc\">{description}</span>\r\n                </h4>\r\n            </div>\r\n            <p className=\"emailRow_time\">\r\n                {time}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Apps working on\\gmailclone\\src\\reducers\\index.js",[],"C:\\Apps working on\\gmailclone\\src\\reducers\\mailReducer.js",[],"C:\\Apps working on\\gmailclone\\src\\components\\sendmail\\SendMail.js",["80"],"import React from 'react'\r\nimport './sendMail.scss'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CloseMessage } from '../../actions/mailActions';\r\nimport firebase from \"firebase\"\r\nimport { db } from '../../firebase';\r\n\r\n\r\nexport const SendMail = () => {\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm()\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n\r\n        db.collection(\"emails\").add({\r\n            to: data.to,\r\n            subject: data.subject,\r\n            message: data.message,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        dispatch(CloseMessage())\r\n    }\r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMailHeader\">\r\n                <h3>New Message</h3>\r\n                <CloseIcon className=\"sendMail_close\" onClick={() => dispatch(CloseMessage())} />\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)} >\r\n                <input type=\"email\" placeholder=\"To\" name=\"to\"\r\n                    ref={register({ required: true })} />\r\n                {errors.to && <p className=\"sendMail_error\">To is Required</p>}\r\n                <input type=\"text\" placeholder=\"Subject\" name=\"subject\"\r\n                    ref={register({ required: true })} />\r\n                {errors.subject && <p className=\"sendMail_error\">Subject is Required</p>}\r\n\r\n\r\n                <input type=\"text\" placeholder=\"Message...\" name=\"message\"\r\n                    ref={register({ required: true })}\r\n                    className=\"sendMail_message\" />\r\n                {errors.message && <p className=\"sendMail_error\">Message is Required</p>}\r\n\r\n\r\n\r\n                <div className=\"sendMail_options\">\r\n                    <Button variant=\"contained\" color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"sendMail_send\">Send</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Apps working on\\gmailclone\\src\\actions\\mailActions.js",[],"C:\\Apps working on\\gmailclone\\src\\firebase.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":9,"column":22,"nodeType":"87","messageId":"88","endLine":9,"endColumn":33},{"ruleId":"85","severity":1,"message":"89","line":10,"column":25,"nodeType":"87","messageId":"88","endLine":10,"endColumn":39},{"ruleId":"81","replacedBy":"90"},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","severity":1,"message":"92","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":18},{"ruleId":"85","severity":1,"message":"93","line":3,"column":22,"nodeType":"87","messageId":"88","endLine":3,"endColumn":29},{"ruleId":"85","severity":1,"message":"94","line":14,"column":37,"nodeType":"87","messageId":"88","endLine":14,"endColumn":42},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'setCurrPage' is assigned a value but never used.","Identifier","unusedVar","'setPostPerPage' is assigned a value but never used.",["95"],["96"],"'CheckBox' is defined but never used.","'Popover' is defined but never used.","'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]